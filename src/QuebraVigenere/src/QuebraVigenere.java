public class QuebraVigenere {
    private static final String CRIPTOGRAMA = "07145a01314152052d5a5e16747e4e083214631db551520e68785f1f35125f006867431f22531b00264144103d5d4e4d685a4f0020531b152d46cd1279545e083a550a5b6500145961180a0221571b17295d0a122741520f294606533a57481529145b0635404f0065524f1a26531b497907054b7d1e1b1425550a1e3156520529145a013b445212bb46431274514908295a4e1c744756006858431d3c531b052d144901bd56521527144e1674601f417b040a113d5e53942d470a0335405a412d595a0131415a1268565812275b570421464b007442490422414e1a37535f003b145a16385348413a5149163a465e1268404b0b35d5ce043b14431e245d481529470a03315e541268715907355654126861441a305d484d68474511745d1b0627424f013a5d1b052d146e1c3a53570568605806394215410c4158123a465e412d5a5e01314452123c550a123b124b132753581239531ba868504b53175d521229180a17351269802c5d45531653550506515d007812771424550a162c4257082b5b5f5325475e41271445113e574f083e5b0a9a74534b0e2155585331414b042b5d4b1f395755152d145a1625475e0f29470a16394249043b555953314a4b0e3a404b173b405a126414491c395d1b113a5b4e06205d49043b144e16745449143c55595f745f5e0d68510a1c2146490e3b144b1f3d5f5e0f3c5b595f74434e046840c01e745f5e0f27460a1035425a0221504b1731125f0468464f003d414f8b265743127456520026404f5330571b03294658163d405a126857451e31405808295d595d74107a12685358123a565e12681c4f1e24405e1229470353245d48123d514753395352126844451731401b052d145816275b4815a25a491a351c1b2f215a4d06bd5f1b0721574b01b5125f043b55470335405a0527144e1a355c4f0468504b0074465a1929d3df1627125f0e68445816275b5f0426404f5300404e0c381a0a25355f541268575f1a305349412c5b595320405a0329584212305d49043b144e1627415a1268514703265748003b144f53244054023d464b01745d4e153a5b59533957490229504500761e1b002e5d581e3b47154107145a01314152052d5a5e16745652123b510a0221571b0068515b063d425e412c51461674574815a9144f1f35505413295a4e1c744756006858430020531b052d145a013b564e1527470a0221571b0026404f007457490025145c163a56520527470a123b411b241d750a1674434e04684445173140d80e68474f01745652132d57431c3a535f0e3b144b533b474f1327470a0335df48043b1a0a2031554e0f2c5b0a16385717412914431d3d5152003c5d5c12745748152946cb53225b55023d584b173512db412f515812b3d154412c510a16394249042f5b59533112db4129595a1f3d53dc8227144e12744249043b514494351259132947431f315b4900685a4553375d56883a57431c745b55152d464412375b540f295804531847570068404b1e36db56412c5159073551541468455f16745d1b0627424f013a5d1b17295d0a12305d4f003a145f1e74104b002c46c91c74565e412a46431435101b0f29146501335355083255cd903b1276142650431238125f0e6877451ebd4058082714023c1971124d68504f15315c5f042650455325475e412c5d590321465a126857451e31405808295d59532757510025145816275d571721504b00745c5441bb464d903b1c1b2e68445816275b5f0426404f5339575502215b441c21125a0826504b5335124b0e3b4743113d5e520529504f5330571b043b404b11315e5e022d460a01315152113a5b491a30535f04685a4b0074405e0d29d3df162712580e251445007477481529504500746755082c5b595f745b55022441591a22571b0227590a1e21565a0faf555953315f1b0227595a0135411b0627424f013a53560426404b1a27125e41215a49163a46521727144b1c7451540f3c51d0173b1255002b5d451d355e15410c5d5900311e1b00215a4e1278125e123851581226125e0f2b5b4407265349411c465f1e24124b003a550a0639531b02275a5c1626415a416a57451e3b125f0e21470a103c575d043b144e167477481529504553311258082c554e903b411b022142431f3d485a0527470853311249043e51461c21124f043a144f1d225b5a0527145f1e351258003a404b53325d490c29580a003b5e520221404b1d305d1b132d475a1c27465a412c5b0a143b445e13265b0a1d3b404f0465554716265b5800265b0653315c4a14295a5e1c74414e0068515b063d425e4125554407bd5f1b0521d5461c335d1b0227590a122146541321504b1731411b0527470a3601731b1129464b532057551529460a0131445e133c5158533b411b113a514006b948541266146b1fbd5f1b052d144b142153490529460a01314254123c550a1731124e0c2914450620405a412b55580735125e0f3e5d4b173512580e26424317355c5f0e6860580639421b1129464b533512782e18141943781249042958430935565a41265b0a3126534808241a";

    public static void main(String[] args) {
        for (int tamanhoSenha = 3; tamanhoSenha < 13; tamanhoSenha++) {
            System.out.println("============================================");
            System.out.println("Tentando quebra de senha com tamanho: " + tamanhoSenha + " ====");

            for (int numeroConjunto = 0; numeroConjunto < tamanhoSenha; numeroConjunto++) {
                int[] vetorOcorrencia = new int[256];

                for (int i = 0; i < CRIPTOGRAMA.length(); i += 2) {
                    if (((i / 2) % tamanhoSenha) == numeroConjunto) {
                        int letra = Integer.parseInt(CRIPTOGRAMA.substring(i, i + 2), 16);
                        vetorOcorrencia[letra]++;
                    }
                }

                int maior = 0;
                int letra = 0;

                for (int i = 0; i < 256; i++) {
                    if (vetorOcorrencia[i] > maior) {
                        letra = i;
                        maior = vetorOcorrencia[i];
                    }
                }

                System.out.print((char) (letra ^ 32));
            }
            System.out.println();
        }
        System.out.println();
    }
}
